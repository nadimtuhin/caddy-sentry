version: "3"

services:
  caddy:
    platform: linux/amd64
    image: caddy
    container_name: caddy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - sentry_network

  sentry:
    platform: linux/amd64
    image: sentry
    container_name: sentry
    restart: always
    volumes:
      - sentry_data:/var/lib/sentry/files
      - sentry_postgres:/var/lib/postgresql/data
    environment:
      - SENTRY_SECRET_KEY=my-secret-key
      - SENTRY_POSTGRES_HOST=postgres
      - SENTRY_DB_NAME=sentry
      - SENTRY_DB_USER=sentry
      - SENTRY_DB_PASSWORD=sentry
      - SENTRY_REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - sentry_network

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    volumes:
      - sentry_postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=sentry
      - POSTGRES_USER=sentry
      - POSTGRES_PASSWORD=sentry
    networks:
      - sentry_network

  redis:
    platform: linux/amd64
    image: redis
    container_name: redis
    restart: always
    volumes:
      - sentry_redis:/data
    networks:
      - sentry_network

volumes:
  sentry_data:
  sentry_postgres:
  sentry_redis:
  caddy_data:
  caddy_config:

networks:
  sentry_network:

